spring.application.name=petstore-feature5-backend-test

# Proporcionar los valores para JWT
SECRET=una-clave-secreta-larga-y-aleatoria-para-tests
EXPIRATION=1000*60*60*24 

# Usar H2 en memoria para pruebas
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;MODE=PostgreSQL
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# No correr Flyway en los tests
spring.flyway.enabled=false

# Evitar que Hibernate intente validar contra la base real
spring.jpa.hibernate.ddl-auto=update

# JWT Configuration heredada del .env
# Las variables SECRET y EXPIRATION se cargan desde .env

# CORS para tests
app.cors.allowed-origins=http://localhost:3000
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=*
app.cors.allow-credentials=true

# Security whitelist para tests - m√°s permisivo
app.security.whitelist=/api/auth/**,/graphql,/graphiql,/actuator/**,/h2-console/**,/test,/graphql-test,/api/products/**

# GraphQL habilitado para tests
spring.graphql.graphiql.enabled=true
spring.graphql.schema.introspection.enabled=true

# Logging para tests
logging.level.com.petstore.backend=DEBUG
logging.level.org.springframework.security=WARN
logging.level.org.springframework.web=WARN
