# Pet Store GraphQL Schema - Basado en esquema Supabase

type Query {
    # Health check
    health: String!
    
    # Get all products (requires Marketing Admin role)
    products: [Product!]!
    
    # Get product by ID
    product(id: ID!): Product
    
    # Get all categories
    categories: [Category!]!
    
    # Get all promotions (Marketing Admin only)
    promotions: [Promotion!]!
}

type Mutation {
    # Create a new promotion (Marketing Admin only)
    createPromotion(input: CreatePromotionInput!): Promotion!
    
    # Update a promotion (Marketing Admin only)
    updatePromotion(id: ID!, input: UpdatePromotionInput!): Promotion
    
    # Delete a promotion (Marketing Admin only)
    deletePromotion(id: ID!): Boolean!
}

type Product {
    productId: ID!
    productName: String!
    basePrice: Float!
    sku: Int!
    category: Category!
    promotion: Promotion
}

type Category {
    categoryId: ID!
    categoryName: String!
    description: String
}

type Promotion {
    promotionId: ID!
    promotionName: String!
    description: String
    startDate: String!
    endDate: String!
    discountValue: Float!
    status: Status!
    user: User
    category: Category
}

type Status {
    statusId: ID!
    statusName: String!
}

type User {
    userId: ID!
    userName: String!
    email: String!
    role: Role!
}

type Role {
    roleId: ID!
    roleName: String!
}

input CreatePromotionInput {
    promotionName: String!
    description: String
    startDate: String!
    endDate: String!
    discountValue: Float!
    statusId: Int!
    categoryId: Int
}

input UpdatePromotionInput {
    promotionName: String
    description: String
    startDate: String
    endDate: String
    discountValue: Float
    statusId: Int
    categoryId: Int
}
